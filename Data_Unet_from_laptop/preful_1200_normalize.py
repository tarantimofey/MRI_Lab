import matplotlib.pyplot as plt
import matplotlib.ticker as ticker
import numpy as np
from scipy.optimize import curve_fit
from scipy import ndimage
from scipy import signal
import math 
import My_Preful_lib.My_Preful_lib as mp
from os import listdir
from os.path import isfile, join
import cv2
import imageio

import tensorflow as tf
import os
import random
from tqdm import tqdm

from skimage.io import imread, imshow
from skimage.transform import resize


import pydicom as dicom


IMG_WIDTH = 128
IMG_HEIGHT = 128
IMG_CHANNELS = 3



#bright_numbers = [2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,21,22,23,24,26,28,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,56,57,59,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,81,83,84,85,86,87,88,89,90,91,93,95,96,97,98,100,101,102,103,104,105,106,108,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,131,132,133,134,135,136,137,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,157,158,160,162,163,165,166,167,168,169,171,172,173,174,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,199,200,202,203,204,205,207,208,209,210,211,212,213,215,217,218,219,220,221,222,223,224,225,226,228,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,248,250,251,252,253,254,255,256,257,258,259,260,262,263,265,266,267,268,269,270,271,273,274,275,276,277,278,279,280,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,348,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,379,380,381,382,383,384,385,387,389,390,391,392,393,394,395,397,399,400,401,402,403,404,405,407,408,409,410,411,412,413,414,415,416,417,418,419,420,422,424,425,426,427,428,429,430,431,432,433,435,437,438,439,440,441,442,443,444,446,447,448,449,450,451,453,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,479,481,482,483,484,485,486,487,488,489,490,492,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,512,513,514,515,516,517,518,519,520,521,522,523,525,527,529,530,531,532,533,534,535,536,537,538,540,542,543,544,545,546,547,548,549,550,551,553,555,556,557,558,559,561,562,563,564,565,567,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,585,587,588,589,590,591,592,593,594,595,596,597,598,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,622,623,624,625,626,627,628,629,630,631,632,633,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,653,655,656,657,658,659,660,661,662,663,664,666,667,668,669,671,672,673,674,675,676,677,678,679,680,682,684,685,686,687,688,689,690,691,692,693,695,696,697,698,700,701,702,703,704,705,706,707,708,709,711,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,731,732,733,734,735,737,738,739,740,741,742,744,745,746,747,748,749,750,752,753,754,755,757,758,759,760,761,762,763,764,765,766,767,768,770,771,772,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,794,795,796,797,798,799,800,801,802,803,805,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,877,878,879,881,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,922,924,925,926,927,928,929,930,931,932,933,934,935,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,973,975,976,977,978,980,981,982,983,984,986,987,988,989,990,991,993,994,995,996,997,998,999,1000,1001,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1020,1021,1022,1023,1024,1025,1026,1027,1028,1030,1031,1032,1033,1034,1035,1037,1038,1039,1040,1041,1042,1043,1044,1045,1047,1049,1050,1051,1052,1053,1054,1055,1056,1057,1059,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1075,1077,1079,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1093,1095,1097,1098,1099,1100,1102,1103,1104,1105,1107,1109,1111,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143,1145,1146,1147,1148,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198]

bright_numbers = [11,13,17,19,21,24,32,37,49,51,52,62,63,76,77,87,88,90,92,103,104,114,117,126,128,129,131,142,147,148,154,156,159,161,162,175,177,178,191,192,194,208,209,211,213,222,225,227,228,230,242,245,247,248,260,263,265,276,279,280,282,293,294,307,309,310,312,322,325,327,328,340,341,343,345,346,348,350,363,364,366,368,379,380,392,393,401,403,408,421,422,424,435,437,438,440,441,443,447,456,457,459,460,461,472,474,475,477,478,480,488,490,492,495,498,500,502,513,516,517,519,525,527,529,530,535,548,551,554,556,567,568,570,571,573,579,584,586,587,589,590,591,606,607,609,610,611,612,625,626,628,630,640,642,643,645,647,648,650,652,662,665,668,670,672,674,676,678,683,684,686,688,692,694,696,699,701,702,704,706,712,713,715,717,728,729,737,740,744,753,756,758,770,772,779,782,784,793,794,796,805,806,808,809,815,824,825,838,845,847,852,861,863,875,878,889,890,896,899,903,904,912,917,920,922,926,928,931,933,934,945,946,948,950,962,969,975,976,978,980,989,990,992,993,995,999,1001,1003,1006,1008,1009,1011,1015,1020,1022,1023,1029,1031,1035,1036,1038,1041,1047,1049,1052,1054,1055,1057,1065,1067,1068,1070,1075,1081,1082,1084,1093,1095,1096,1098,1107,1108,1110,1111,1113,1117,1124,1127,1128,1139,1141,1143,1144,1152,1157,1158,1160,1164,1171,1173,1174,1176,1186,1196,1198,1199]




#path = 'C:/Users/Taran/Desktop/PREFUL_1200/olyafirst1200/Tiff/'
path = 'C:/Users/Taran/Desktop/PREFUL_1200/olyasecond1200/Tiff/'
onlyfiles = listdir(path+'Image')
onlyfiles.sort(key=len)
print(onlyfiles)
images = []

for n in range(0, len(onlyfiles)):
  #images[n] = cv2.imread( join(mypath,onlyfiles[n]) , 2)
  #images.append(cv2.imread( join(path,onlyfiles[n]) , 2))
  images.append(cv2.imread( path+'Image/'+onlyfiles[n] , 2))
  #images.append(cv2.imread( join(path,onlyfiles[n])))

"""
ids = listdir(path)
images = np.zeros((len(ids), IMG_HEIGHT, IMG_WIDTH, IMG_CHANNELS), dtype=np.float32)
print('\n\nResizing images...')
for n, id_ in tqdm(enumerate(ids), total=len(ids)):
    img = imread(path + id_)[:,:]
    #img = cv2.normalize(img, None, 0, 255, cv2.NORM_MINMAX, cv2.CV_8U)
    img = img[..., np.newaxis]
    img = resize(img, (IMG_HEIGHT, IMG_WIDTH), mode='constant', preserve_range=True)
    images[n] = img
"""
"""
path = 'C:/Users/Taran/Desktop/PREFUL_1200/olyafirst1200.dcm'
#path = 'C:/Users/Taran/Desktop/PREFUL_1200/olyasecond1200.dcm'
#path = 'C:/Users/Taran/Desktop/PREFUL_1200/olyathird1200.dcm'
ds = dicom.dcmread(path)

ds = dicom.dcmread(path)
images = ds.pixel_array
img = ds.pixel_array[0]
"""

images = np.asarray(images)
print('images.shape ', images.shape)


"""
img = cv2.imread('C:/Users/Taran/Desktop/PREFUL_1200/olyafirst1200/Tiff/Image/img0000.tif', 2)
img = cv2.normalize(img, None, 0, 255, cv2.NORM_MINMAX, cv2.CV_8U)
print(img.shape)
cv2.namedWindow("Img")
cv2.imshow('Img',img)
"""






for i in tqdm(range(len(bright_numbers))):
    images[bright_numbers[i]] = images[bright_numbers[i]]/10

for i in tqdm(range(len(images))):    
    cv2.imwrite(path + 'Norm/' + 'img_' + str(i) + '.tif', images[i])




cv2.waitKey(0)
cv2.destroyAllWindows()

